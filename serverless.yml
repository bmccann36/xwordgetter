service: x-word-getter
package:
  individually: true
useDotenv: true
plugins:
  - serverless-dotenv-plugin

frameworkVersion: "2"

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: "20201221"

  ecr:
    # In this section you can define images that will be built locally and uploaded to ECR
    images:
      appimage:
        path: ./

  iam:
    role:
      name: rmxword-bucket-role
      statements:
        - Effect: "Allow"
          Resource: "arn:aws:s3:::puzzle-pdf-bucket/*"
          Action:
            - s3:ListObject
            - s3:ListBucket
            - s3:GetObject
            - s3:PutObject

functions:
  PuzzleToS3Cron:
    memorySize: 2048
    image:
      name: appimage
    events:
      - schedule: cron(30 7 ? * MON,WED,FRI *)
    timeout: 90 # in seconds

  S3toRemarkable:
    handler: ./dist/S3toRemarkableHandler.Handler
    events:
      - s3:
          bucket: puzzle-pdf-bucket
          event: s3:ObjectCreated:*
          existing: true
    package:
      patterns:
        - '!node_modules/puppeteer/**'
        - '!node_modules/puppeteer-core/**'

#! a function for testing out code in the docker image
  # TestFunc:
  #   image:
  #     name: appimage
  #     command:
  #       - dist/handler2.Handler


resources:
  Resources:
    puzzlePdfBucket:
      Type: "AWS::S3::Bucket"
      DeletionPolicy: Retain
      Properties:
        BucketName: puzzle-pdf-bucket
