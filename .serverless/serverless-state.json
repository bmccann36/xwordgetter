{
  "service": {
    "service": "x-word-getter",
    "serviceObject": {
      "name": "x-word-getter"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs12.x",
      "lambdaHashingVersion": "20201221",
      "ecr": {
        "images": {
          "appimage": {
            "path": "./"
          }
        }
      },
      "iam": {
        "role": {
          "name": "rmxword-bucket-role",
          "statements": [
            {
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::puzzle-pdf-bucket/*",
              "Action": [
                "s3:ListObject",
                "s3:ListBucket",
                "s3:GetObject",
                "s3:PutObject"
              ]
            }
          ]
        }
      },
      "stage": "dev",
      "region": "us-east-1",
      "versionFunctions": true,
      "environment": {
        "REMARKABLE_DEVICE_TOKEN": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRoMC11c2VyaWQiOiJhdXRoMHw1ZjJkOWVhYmMxM2JkODAwMzdjNWM3YmYiLCJkZXZpY2UtZGVzYyI6ImRlc2t0b3Atd2luZG93cyIsImRldmljZS1pZCI6IjM5MGY5ZGNmLThjNmQtNTAyMS1iYThkLWY2NDM3YTQwNDg5OCIsImlhdCI6MTYzMTYyMDQ1NCwiaXNzIjoick0gV2ViQXBwIiwianRpIjoiY2swdGs3eTVBdm89IiwibmJmIjoxNjMxNjIwNDU0LCJzdWIiOiJyTSBEZXZpY2UgVG9rZW4ifQ.bBVBTXgoYA9p-zwX4pEWhls6M94SCfhG9t9O7vkAkV8",
        "PUZZLE_DATE_OVERRIDE": "2021/09/13"
      },
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "PuzzleToS3CronLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/x-word-getter-dev-PuzzleToS3Cron"
            }
          },
          "S3toRemarkableLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/x-word-getter-dev-S3toRemarkable"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "x-word-getter",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/x-word-getter-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/x-word-getter-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": "rmxword-bucket-role"
            }
          },
          "S3toRemarkableLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/x-word-getter/dev/1631621417185-2021-09-14T12:10:17.185Z/S3toRemarkable.zip"
              },
              "Handler": "./dist/S3toRemarkableHandler.Handler",
              "Runtime": "nodejs12.x",
              "FunctionName": "x-word-getter-dev-S3toRemarkable",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "REMARKABLE_DEVICE_TOKEN": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRoMC11c2VyaWQiOiJhdXRoMHw1ZjJkOWVhYmMxM2JkODAwMzdjNWM3YmYiLCJkZXZpY2UtZGVzYyI6ImRlc2t0b3Atd2luZG93cyIsImRldmljZS1pZCI6IjM5MGY5ZGNmLThjNmQtNTAyMS1iYThkLWY2NDM3YTQwNDg5OCIsImlhdCI6MTYzMTYyMDQ1NCwiaXNzIjoick0gV2ViQXBwIiwianRpIjoiY2swdGs3eTVBdm89IiwibmJmIjoxNjMxNjIwNDU0LCJzdWIiOiJyTSBEZXZpY2UgVG9rZW4ifQ.bBVBTXgoYA9p-zwX4pEWhls6M94SCfhG9t9O7vkAkV8",
                  "PUZZLE_DATE_OVERRIDE": "2021/09/13"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "S3toRemarkableLogGroup"
            ]
          },
          "S3toRemarkableLambdaVersionjTM1ugFCKhT3lxweot389I2Bs90Oo4esokKNM9aUE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "S3toRemarkableLambdaFunction"
              },
              "CodeSha256": "VGDRbCD7nln00OZPS+fxkcmgX3Lkm0mpgjqmRpRVQL8="
            }
          },
          "PuzzleToS3CronLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "ImageUri": "466357709346.dkr.ecr.us-east-1.amazonaws.com/serverless-x-word-getter-dev@sha256:099f9f4e0cacc3f363c14a122b1d17886022079a3ae55d4a5755a5446c8c71bc"
              },
              "PackageType": "Image",
              "FunctionName": "x-word-getter-dev-PuzzleToS3Cron",
              "MemorySize": 2048,
              "Timeout": 90,
              "Environment": {
                "Variables": {
                  "REMARKABLE_DEVICE_TOKEN": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRoMC11c2VyaWQiOiJhdXRoMHw1ZjJkOWVhYmMxM2JkODAwMzdjNWM3YmYiLCJkZXZpY2UtZGVzYyI6ImRlc2t0b3Atd2luZG93cyIsImRldmljZS1pZCI6IjM5MGY5ZGNmLThjNmQtNTAyMS1iYThkLWY2NDM3YTQwNDg5OCIsImlhdCI6MTYzMTYyMDQ1NCwiaXNzIjoick0gV2ViQXBwIiwianRpIjoiY2swdGs3eTVBdm89IiwibmJmIjoxNjMxNjIwNDU0LCJzdWIiOiJyTSBEZXZpY2UgVG9rZW4ifQ.bBVBTXgoYA9p-zwX4pEWhls6M94SCfhG9t9O7vkAkV8",
                  "PUZZLE_DATE_OVERRIDE": "2021/09/13"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "PuzzleToS3CronLogGroup"
            ]
          },
          "PuzzleToS3CronLambdaVersionloVNjVeAmXRzUfRdQJEIZFJJv5HMRSXM34zIbLqT4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PuzzleToS3CronLambdaFunction"
              },
              "CodeSha256": "099f9f4e0cacc3f363c14a122b1d17886022079a3ae55d4a5755a5446c8c71bc"
            }
          },
          "PuzzleToS3CronEventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(30 6 ? * MON,WED,FRI *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "PuzzleToS3CronLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "PuzzleToS3CronSchedule"
                }
              ]
            }
          },
          "PuzzleToS3CronLambdaPermissionEventsRuleSchedule1": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PuzzleToS3CronLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "events.amazonaws.com",
              "SourceArn": {
                "Fn::GetAtt": [
                  "PuzzleToS3CronEventsRuleSchedule1",
                  "Arn"
                ]
              }
            }
          },
          "S3toRemarkableCustomS31": {
            "Type": "Custom::S3",
            "Version": 1,
            "DependsOn": [
              "S3toRemarkableLambdaFunction",
              "CustomDashresourceDashexistingDashs3LambdaFunction"
            ],
            "Properties": {
              "ServiceToken": {
                "Fn::GetAtt": [
                  "CustomDashresourceDashexistingDashs3LambdaFunction",
                  "Arn"
                ]
              },
              "FunctionName": "x-word-getter-dev-S3toRemarkable",
              "BucketName": "puzzle-pdf-bucket",
              "BucketConfigs": [
                {
                  "Event": "s3:ObjectCreated:*",
                  "Rules": []
                }
              ]
            }
          },
          "IamRoleCustomResourcesLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "x-word-getter",
                        "custom-resources-lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Resource": {
                          "Fn::Join": [
                            ":",
                            [
                              "arn",
                              {
                                "Ref": "AWS::Partition"
                              },
                              "s3",
                              "",
                              "",
                              "puzzle-pdf-bucket"
                            ]
                          ]
                        },
                        "Action": [
                          "s3:PutBucketNotification",
                          "s3:GetBucketNotification"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Resource": {
                          "Fn::Join": [
                            ":",
                            [
                              "arn",
                              {
                                "Ref": "AWS::Partition"
                              },
                              "lambda",
                              {
                                "Ref": "AWS::Region"
                              },
                              {
                                "Ref": "AWS::AccountId"
                              },
                              "function",
                              "*"
                            ]
                          ]
                        },
                        "Action": [
                          "lambda:AddPermission",
                          "lambda:RemovePermission"
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "CustomDashresourceDashexistingDashs3LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/x-word-getter/dev/1631621417185-2021-09-14T12:10:17.185Z/custom-resources.zip"
              },
              "FunctionName": "x-word-getter-dev-custom-resource-existing-s3",
              "Handler": "s3/handler.handler",
              "MemorySize": 1024,
              "Runtime": "nodejs12.x",
              "Timeout": 180,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleCustomResourcesLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "IamRoleCustomResourcesLambdaExecution"
            ]
          },
          "puzzlePdfBucket": {
            "Type": "AWS::S3::Bucket",
            "DeletionPolicy": "Retain",
            "Properties": {
              "BucketName": "puzzle-pdf-bucket"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-x-word-getter-dev-ServerlessDeploymentBucketName"
            }
          },
          "S3toRemarkableLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "S3toRemarkableLambdaVersionjTM1ugFCKhT3lxweot389I2Bs90Oo4esokKNM9aUE"
            },
            "Export": {
              "Name": "sls-x-word-getter-dev-S3toRemarkableLambdaFunctionQualifiedArn"
            }
          },
          "PuzzleToS3CronLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PuzzleToS3CronLambdaVersionloVNjVeAmXRzUfRdQJEIZFJJv5HMRSXM34zIbLqT4"
            },
            "Export": {
              "Name": "sls-x-word-getter-dev-PuzzleToS3CronLambdaFunctionQualifiedArn"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-dotenv-plugin"
    ],
    "pluginsData": {},
    "functions": {
      "PuzzleToS3Cron": {
        "memorySize": 2048,
        "image": {
          "name": "appimage"
        },
        "events": [
          {
            "schedule": "cron(30 6 ? * MON,WED,FRI *)"
          }
        ],
        "timeout": 90,
        "name": "x-word-getter-dev-PuzzleToS3Cron",
        "package": {},
        "memory": 2048,
        "vpc": {},
        "versionLogicalId": "PuzzleToS3CronLambdaVersionloVNjVeAmXRzUfRdQJEIZFJJv5HMRSXM34zIbLqT4"
      },
      "S3toRemarkable": {
        "handler": "./dist/S3toRemarkableHandler.Handler",
        "events": [
          {
            "s3": {
              "bucket": "puzzle-pdf-bucket",
              "event": "s3:ObjectCreated:*",
              "existing": true
            }
          }
        ],
        "package": {
          "patterns": [
            "!node_modules/puppeteer/**",
            "!node_modules/puppeteer-core/**"
          ],
          "artifact": "/Users/bnm/xwordgetter/.serverless/S3toRemarkable.zip"
        },
        "name": "x-word-getter-dev-S3toRemarkable",
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "S3toRemarkableLambdaVersionjTM1ugFCKhT3lxweot389I2Bs90Oo4esokKNM9aUE"
      }
    },
    "resources": {
      "Resources": {
        "puzzlePdfBucket": {
          "Type": "AWS::S3::Bucket",
          "DeletionPolicy": "Retain",
          "Properties": {
            "BucketName": "puzzle-pdf-bucket"
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "package": {
        "individually": true,
        "artifactDirectoryName": "serverless/x-word-getter/dev/1631621417185-2021-09-14T12:10:17.185Z"
      },
      "useDotenv": true,
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "frameworkVersion": "2",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/x-word-getter/dev/1631621417185-2021-09-14T12:10:17.185Z",
    "artifact": ""
  }
}